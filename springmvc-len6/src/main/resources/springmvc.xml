<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<context:component-scan base-package="com.atguigu.springmvc" />

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" ></property>
		<property name="suffix" value=".jsp"></property>
	</bean>


    <!-- 静态资源处理 -->
	<!--此标签 在 SpringMVC 上下文中定义一个 DefaultServletHttpRequestHandler,
		它会对进入 DispatcherServlet的请求进行筛查, 如果发现是没有经过映射的请求,
		就将该请求交由 WEB应用服务器默认的 Servlet处理.-->
	<mvc:default-servlet-handler />

	
	<!-- 要是用了<mvc:default-servlet-handler />、<mvc:view-controller />标签就必须使用此标签 --> 
	<!--<mvc:annotation-driven />-->

    <mvc:annotation-driven conversion-service="conversionService" />

    <!-- ConversionService 组件进行数据类型转换、数据格式化工作。 -->
    <!-- 利用FormattingConversionServiceFactoryBean在Spring的IOC容器中定义一个 ConversionService. -->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="employeeConverter" /> <!-- 注入自定义的类型转换器 -->
            </set>
        </property>
    </bean>


    <!-- 配置 MultipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="maxUploadSize" value="2048000" />	<!-- 单位：kb -->
    </bean>


    <mvc:interceptors>
        <!-- 拦截所有 -->
        <bean class="com.atguigu.springmvc.interceptors.FirstInterceptor" />

        <mvc:interceptor>
            <!-- 拦截指定 -->
            <mvc:mapping path="/emps"/>
            <bean class="com.atguigu.springmvc.interceptors.SecondInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 显示配置 SimpleMappingExceptionResolver来处理异常 ，在SpringMVCTest类里讲了3个-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--<property name="exceptionAttribute" value="ex" />&lt;!&ndash; 在页面取异常信息就用.ex了     默认是exception &ndash;&gt;-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!--<prop key="java.lang.ArrayIndexOutOfBoundsException">error</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

</beans>
